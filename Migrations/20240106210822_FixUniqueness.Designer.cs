// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ShoppingListDemo.Data;

#nullable disable

namespace ShoppingListDemo.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20240106210822_FixUniqueness")]
    partial class FixUniqueness
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "6.0.25");

            modelBuilder.Entity("ShoppingListDemo.Data.ScheduledShoppingItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("id");

                    b.Property<bool>("Bought")
                        .HasColumnType("INTEGER")
                        .HasColumnName("bought");

                    b.Property<DateTime>("Day")
                        .HasColumnType("TEXT")
                        .HasColumnName("day");

                    b.Property<int>("ShoppingItemId")
                        .HasColumnType("INTEGER")
                        .HasColumnName("shopping_item_id");

                    b.HasKey("Id")
                        .HasName("pk_scheduled_shopping_items");

                    b.HasIndex("Day")
                        .HasDatabaseName("ix_scheduled_shopping_items_day");

                    b.HasIndex("ShoppingItemId")
                        .HasDatabaseName("ix_scheduled_shopping_items_shopping_item_id");

                    b.HasIndex("Day", "ShoppingItemId")
                        .IsUnique()
                        .HasDatabaseName("ix_scheduled_shopping_items_day_shopping_item_id");

                    b.ToTable("scheduled_shopping_items", (string)null);
                });

            modelBuilder.Entity("ShoppingListDemo.Data.ShoppingCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("id");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("TEXT")
                        .HasColumnName("name");

                    b.Property<int>("Order")
                        .HasColumnType("INTEGER")
                        .HasColumnName("order");

                    b.HasKey("Id")
                        .HasName("pk_shopping_categories");

                    b.HasIndex("Name")
                        .IsUnique()
                        .HasDatabaseName("ix_shopping_categories_name");

                    b.HasIndex("Order")
                        .IsUnique()
                        .HasDatabaseName("ix_shopping_categories_order");

                    b.ToTable("shopping_categories", (string)null);
                });

            modelBuilder.Entity("ShoppingListDemo.Data.ShoppingItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("id");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("TEXT")
                        .HasColumnName("name");

                    b.Property<int>("ShoppingCategoryId")
                        .HasColumnType("INTEGER")
                        .HasColumnName("shopping_category_id");

                    b.HasKey("Id")
                        .HasName("pk_shopping_items");

                    b.HasIndex("ShoppingCategoryId")
                        .HasDatabaseName("ix_shopping_items_shopping_category_id");

                    b.ToTable("shopping_items", (string)null);
                });

            modelBuilder.Entity("ShoppingListDemo.Data.ScheduledShoppingItem", b =>
                {
                    b.HasOne("ShoppingListDemo.Data.ShoppingItem", "ShoppingItem")
                        .WithMany()
                        .HasForeignKey("ShoppingItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_scheduled_shopping_items_shopping_items_shopping_item_id");

                    b.Navigation("ShoppingItem");
                });

            modelBuilder.Entity("ShoppingListDemo.Data.ShoppingItem", b =>
                {
                    b.HasOne("ShoppingListDemo.Data.ShoppingCategory", "ShoppingCategory")
                        .WithMany("ShoppingItems")
                        .HasForeignKey("ShoppingCategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_shopping_items_shopping_categories_shopping_category_id");

                    b.Navigation("ShoppingCategory");
                });

            modelBuilder.Entity("ShoppingListDemo.Data.ShoppingCategory", b =>
                {
                    b.Navigation("ShoppingItems");
                });
#pragma warning restore 612, 618
        }
    }
}
